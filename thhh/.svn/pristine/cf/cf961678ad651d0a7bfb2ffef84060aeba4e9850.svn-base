package com.thhh.easy.dao.imp;

import java.util.List;

import org.hibernate.Query;
import org.hibernate.Session;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.orm.hibernate3.support.HibernateDaoSupport;

import com.thhh.easy.dao.IActDao;
import com.thhh.easy.entity.Act;

/**
 * A data access object (DAO) providing persistence and search support for Act
 * entities. Transaction control of the save(), update() and delete() operations
 * can directly support Spring container-managed transactions or they can be
 * augmented to handle user-managed Spring transactions. Each of these methods
 * provides additional information for how to configure it for the desired type
 * of transaction control.
 * 
 * @see com.thhh.easy.entity.Act
 * @author MyEclipse Persistence Tools
 */
public class ActDAO extends HibernateDaoSupport implements IActDao {
	private static final Logger log = LoggerFactory.getLogger(ActDAO.class);
	// property constants
	public static final String THEME = "theme";
	public static final String ACCOUNT = "account";
	public static final String DAYS = "days";
	public static final String PAY = "pay";
	public static final String STATES = "states";
	public static final String CONTENTS = "contents";

	protected void initDao() {

	}

	/**
	 * 根据id查询活动
	 */
	public Act findActById(Integer id) {
		log.debug("getting Act instance with id: " + id);
		try {
			Act instance = (Act) getHibernateTemplate().get(
					"com.thhh.easy.entity.Act", id);
			return instance;
		} catch (RuntimeException re) {
			log.error("get failed", re);
			throw re;
		}
	}

	/**
	 * 查看活动,搜索活动列表，id=user.id
	 */
	public List<Act> findAct(int id, int pageIndex, int rowCount) {

		// Session session = this.getHibernateTemplate().getSessionFactory()
		// .openSession();
		// String queryString =
		// "FROM ACT WHERE USERS_ID NOT IN (?) AND STATES = 1";
		// List<Act> list = getHibernateTemplate().find(queryString, id);
		//
		// Query query = session.createQuery(queryString);
		// query.setFirstResult((pageIndex - 1) * rowCount);
		// query.setMaxResults(rowCount);
		//
		// list = query.list();
		// session.close();
		// return list;

		// Session session = getSession();

		Session session = this.getHibernateTemplate().getSessionFactory()
				.openSession();
		Query query = session
				.createQuery("from Act where users_id not IN (?) and states = 1");
		query.setParameter(0, id);

		int startRow = (pageIndex - 1) * rowCount;
		query.setFirstResult(startRow);
		query.setMaxResults(rowCount);

		query.executeUpdate();

		List<Act> actList = query.list();

		session.close();
		return actList;
	}

	/**
	 * 查看活动详情，id=act.id
	 */
	public Act findActDetail(int id) {
		Session session = getSession();

		Query query = session.createQuery("from act where id=?");

		query.setParameter(0, id);

		query.executeUpdate();

		List actList = query.list();
		if (actList.size() != 0) {
			Act act = (Act) actList.get(0);
			session.close();
			return act;
		}
		session.close();

		// String queryString = "from act where id=?";
		// Act act = (Act) getHibernateTemplate().find(queryString, id);

		return null;
	}

	public static Logger getLog() {
		return log;
	}

}